#copyright (C) F5 Networks, Inc. 2025
# All rights reserved.
#
# No part of the software may be reproduced or transmitted in any
# form or by any means, electronic or mechanical, for any purpose,
# without express written permission of F5 Networks, Inc.
#
# NGINX Management Suite - Instance Manager configuration
# Created for v. 2.4
# (c) NGINX, Inc. 2021-2024

# If you choose to modify this file, create a backup of your changes.
# This configuration file at its default location might be replaced by the
# package management during upgrades

# NOTE: enabling OIDC authentication requires using NGINX Plus
#       with NJS installed and the module loaded in the config

# Enable when using OIDC
# log_format oidc_jwt '$remote_addr - $jwt_claim_sub [$time_local] "$request" '
#                     '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
#                     '"$http_x_forwarded_for"';

# Main routing logic
map $uri $mapped_upstream {
    # default is a down upstream that returns 502
    default default-service;

    # Allows all modules to include their own mapped apis as part of the base config
    include /etc/nms/nginx/upstreams/mapped_apis/*.conf;

    # Core API path mappings
    "~^/api/platform/v1/analytics"        core-api-service;
    "~^/api/platform/v1/roles"            core-api-service;
    "~^/api/platform/v1/userinfo"         core-api-service;
    "~^/api/platform/v1/users"            core-api-service;
    "~^/api/platform/v1/groups"           core-api-service;
    "~^/api/platform/v1/features"         core-api-service;
    "~^/api/platform/v1/modules"          core-api-service;
    "~^/api/platform/v1/trace"            core-api-service;
    "~^/api/platform/v1/resource-groups"  core-api-service;
    "~^/api/platform/v1/platform-config/*"  core-api-service;

    # SCIM related mappings
    "~^/api/scim/v2/users"  core-api-service;
    "~^/api/scim/v2/groups" core-api-service;

    # DPM service API path mappings
    "~^/api/platform/v1/analysis"              dpm-api-service;
    "~^/api/platform/v1/certs"                 dpm-api-service;
    "~^/api/platform/v1/configs"               dpm-api-service;
    "~^/api/platform/v1/k8s-usage"             dpm-api-service;
    "~^/api/platform/v1/instance-groups"       dpm-api-service;
    "~^/api/platform/v1/instances"             dpm-api-service;
    "~^/api/platform/v1/servers"               dpm-api-service;
    "~^/api/platform/v1/systems"               dpm-api-service;
    "~^/api/platform/v1/security/publish"      dpm-api-service;
    "~^/api/platform/v1/security/deployments"  dpm-api-service;
    "~^/api/platform/v1/inventory"             dpm-api-service;
    "~^/api/platform/v1/conf-templates"        dpm-api-service;
    "~^/api/nginx-usage"                       dpm-api-service;

    # Integration service API path mappings
    "~^/api/platform/v1/security/policies"          integrations-api-service;
    "~^/api/platform/v1/security/attack-signatures" integrations-api-service;
    "~^/api/platform/v1/security/threat-campaigns"  integrations-api-service;
    "~^/api/platform/v1/security/logprofiles"       integrations-api-service;
    "~^/api/platform/v1/license"                    integrations-api-service;
    "~^/api/platform/v1/report"                     integrations-api-service;
}

# Default service used by the uri map above
upstream default-service {
    # a down service returns a 502
    server unix:/var/run/nms/default.sock down;
}

# REST to core services
upstream core-api-service {
    zone core-api-service 64k;

    # Unix socket by default, optional TCP needs configuration in /etc/nms/nms.conf
    server unix:/var/run/nms/core.sock;
    #server 127.0.0.1:8033;

    keepalive 32;
}

upstream core-grpc-service {
    zone core-grpc-service 64k;
    server unix:/var/run/nms/coregrpc.sock;
    keepalive 32;
}

# REST to DPM services
upstream dpm-api-service {
    zone dpm-api-service 64k;

    # Unix socket by default, optional TCP needs configuration in /etc/nms/nms.conf
    server unix:/var/run/nms/dpm.sock;
    #server 127.0.0.1:8034;

    keepalive 32;
}

# gRPC to ingestion services
upstream ingestion-grpc-service {
    zone ingestion-grpc-service 64k;

    # Unix socket by default, optional TCP needs configuration in /etc/nms/nms.conf
    server unix:/var/run/nms/ingestion.sock;
    #server 127.0.0.1:8035;

    keepalive 32;
}

# gRPC to DPM services
upstream dpm-grpc-service {
    zone dpm-grpc-service 64k;

    # Unix socket by default, optional TCP needs configuration in /etc/nms/nms.conf
    server unix:/var/run/nms/am.sock;
    #server 127.0.0.1:8036;

    keepalive 32;
}

# REST to Integrations services
upstream integrations-api-service {
    zone integrations-api-service 64k;

    # Unix socket by default, optional TCP needs configuration in /etc/nms/nms.conf
    server unix:/var/run/nms/integrations.sock;
    #server 127.0.0.1:8037;

    keepalive 32;
}

# Upstreams provided by all modules
include /etc/nms/nginx/upstreams/*.conf;

# WebSocket config, comment out if this section is duplicate via other config files
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# shared rate limiting memory zone definitions
limit_req_zone $binary_remote_addr zone=nms-ratelimit:10m rate=200r/s;
limit_req_zone $binary_remote_addr zone=nms-strict-ratelimit:10m rate=10r/s;

# OIDC -- client configuration uncomment include to enable
#include /etc/nms/nginx/oidc/openid_configuration.conf;



# Updated `nms-http.conf` with removal of 443 ssl block
# and merged all relevant config into a single HTTP (port 80) block.

# ... (unchanged content from the top)

# Main external HTTP server (replaces previous 443 and original 80 block)
server {
    listen 80;
    server_name _;
    root /var/www/nms;

    # Redirect from / to /ui/
    location = / {
	    root /var/www/nms;
	    index index.html;
	    try_files $uri $uri/ /ui/index.html;

	    # absolute_redirect off;
	    #return 302 "/ui/";
    }

    location /ui/ {
        index index.html;
        try_files $uri $uri/ =404;
    }

    location /ui {
        rewrite ^/ui$ /ui/ break;
        gzip_static on;
        add_header Cache-Control "private; max-age=86400";
        add_header Content-Security-Policy "default-src 'none'; block-all-mixed-content; frame-ancestors 'self'; object-src 'none'; manifest-src 'self'; script-src 'self' https://*.walkme.com 'unsafe-inline' 'unsafe-eval'; style-src 'self' https://*.walkme.com fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://*.walkme.com s3.walkmeusercontent.com d3sbxpiag177w8.cloudfront.net data:; font-src 'self' https://*.walkme.com data: https://fonts.gstatic.com; connect-src 'self' https://*.walkme.com; frame-src 'self' https://*.walkme.com blob:; worker-src 'self' blob: https://*.walkme.com;";
        add_header X-Content-Type-Options nosniff;
        try_files $uri $uri/ /ui/index.html;
    }

    location ~ ^/ui/(.+)\.json {
        auth_basic "Nginx Management Suite";
        gzip_static on;
        add_header Cache-Control "private; max-age=86400";
        add_header X-Content-Type-Options nosniff;
    }

    location ~ ^/(.+)-ui/(?<page>.+)$ {
        auth_basic "Nginx Management Suite";
        proxy_pass http://$mapped_upstream/$page;
    }

    location /api {
        auth_basic "NGINX Management Suite";
        limit_req zone=nms-ratelimit burst=20 nodelay;
        limit_req_status 429;
        proxy_pass http://$mapped_upstream;
    }

    location = /api/nginx-usage {
        limit_req zone=nms-ratelimit burst=20 nodelay;
        limit_req_status 429;
        proxy_pass http://$mapped_upstream;
    }

    location = /login {
        auth_basic "NGINX Management Suite";
        add_header X-Frame-Options sameorigin;
        add_header X-Content-Type-Options nosniff;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        expires -1;
        proxy_pass http://core-api-service/api/platform/v1/trace;
        proxy_intercept_errors on;
        error_page 302 = @return302LaunchPad;
    }

    location = /trace {
        proxy_pass http://core-api-service/api/platform/v1/trace;
        proxy_intercept_errors on;
        error_page 302 = @return302LaunchPad;
    }

    location @return302LaunchPad {
        return 302 "ui/dashboard";
    }

    location = /modules {
        proxy_pass http://core-api-service/api/platform/v1/modules;
    }

    location ~* /license/versions {
        rewrite ^(.*)(/license/versions)(.*)$ $1/modules/versions$3 break;
        proxy_pass http://$mapped_upstream;
    }

    location = /agent/install {
        return 302 '/install/nginx-agent';
    }

    location = /install/nginx-agent {
        sub_filter_types *;
        sub_filter '"CTR_FQDN"' '"$host"';
    }

    location = /install/nginx-plus-module-metrics {
        sub_filter_types *;
        sub_filter '"CTR_FQDN"' '"$host"';
    }

    location /f5.nginx.agent.sdk.MetricsService {
        include /etc/nms/nginx/errors-grpc.loc_conf;
        grpc_socket_keepalive on;
        grpc_read_timeout 5m;
        grpc_send_timeout 5m;
        client_body_timeout 10m;
        grpc_pass grpc://ingestion-grpc-service;
    }

    location /f5.nginx.agent.sdk.Commander {
        include /etc/nms/nginx/errors-grpc.loc_conf;
        grpc_socket_keepalive on;
        grpc_read_timeout 5m;
        grpc_send_timeout 5m;
        client_body_timeout 10m;
        grpc_pass grpc://dpm-grpc-service;
    }

    location /check-agent-client-cert {
        internal;
        if ($ssl_client_verify !~* 'SUCCESS') {
            return 401;
        }
        return 200;
    }

    location /f5.nginx.nms.sdk.NotificationSvc {
        auth_basic "NGINX Management Suite";
        include /etc/nms/nginx/errors-grpc.loc_conf;
        grpc_socket_keepalive on;
        grpc_read_timeout 1h;
        grpc_send_timeout 5m;
        client_body_timeout 10m;
        grpc_set_header Content-Type application/grpc;
        grpc_hide_header Content-Type;
        add_header Content-Type "application/grpc-web+proto";
        grpc_pass grpc://core-grpc-service;
    }

    include /etc/nms/nginx/errors.http_conf;
    include /etc/nms/nginx/errors-grpc.server_conf;
    include /etc/nms/nginx/locations/*.conf;

    add_header X-Frame-Options sameorigin;
    add_header X-Content-Type-Options nosniff;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    proxy_hide_header X-Powered-By;
    proxy_set_header Host $host;
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 128;

    auth_basic_user_file /etc/nms/nginx/.htpasswd;
    add_header Nginx-Management-Suite-Auth "Basic";
    proxy_set_header Nginx-Management-Suite-User $remote_user;
    proxy_set_header Nginx-Management-Suite-Groups "";
    proxy_set_header Nginx-Management-Suite-ExternalId "";

    proxy_set_header object $request_uri;
    proxy_set_header http-method $request_method;

    limit_req zone=nms-strict-ratelimit burst=10 nodelay;
    limit_req_status 429;

    server_tokens off;
}

